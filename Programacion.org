#+title: Programación Lineal
#+author: Nelly Mariela

#+options: H:2
#+latex_header: \usepackage{listings}

*  Teoría
** Motivación
El  objetivo de la programación lineal es maximizar funciones lineales
sobre dominios convexos, es decir, definidos sobre regiones dadas por
desigualdades.
[[file:grap.png]]



** Ejemplos
- El problema de la dieta.
- Optimización de lugares en una excusión.
- Escoger objetos óptimos para un campamento.
- El problema del flujo máximo.

** Convexidad

   Un conjunto \(X\) es *convexo* si para todos \(x,y\in X\) y \(t\in
   [0,1]\) se tiene que \(tx+(1-t)y\in X\).

** El Método Simplex

*  Herramientas computancionales


**  Emacs
   | C-x C-s       | salvar archivo              |
   | C-x C-f       | abrir archivo               |
   | M-q           | formatear el párrafo        |
   | C-x d         | editar directorios          |
   | C-g           | salir de todo               |
   | C-x 2         | divide horizontalmente      |
   | C-x 3         | divide verticalmente        |
   | C-x 1         | regresa a una sola pantalla |
   | M-w           | copiar la región            |
   | C-w           | borrar la región            |
   | Shift-flechas | seleccionar la región       |
   | C-y           | pegar la región             |
   | C-x b         | cambiar buffer              |
   | C-x k         | matar buffer                |
*** Org mode
| C-c C-c | corre un bloque de código |
|         |                           |
|         |                           |
|---------+---------------------------|
   
**  Git
*** Git en la terminal
*** Github
**  Python
*** El leguaje Python
    En el lenguaje Python podemos hacer operaciones:
    
    #+begin_src python :session
2+2
    #+end_src

    #+RESULTS:
    : 4
También podemos usar la biblioteca pulp.Por ejemplo,encontramos el
máximo de \(-4x+y\) sujeto a \(x+y\leq \frac{1}{2}\)

#+begin_src python :session
from pulp import *
x = LpVariable("x", 0, 3)
y = LpVariable("y", 0, 1)
prob = LpProblem("myProblem", LpMinimize)
prob += x + y <= 2
prob += -4*x + y
status = prob.solve()
value(x), value(y)
#+end_src

    #+RESULTS:
    | 2.0 | 0.0 |

    
*** Jupyter
**  LaTeX
